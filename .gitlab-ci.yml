image: ubuntu:16.10

variables:
  DOCKER_DRIVER: overlay2

stages:
  - build
  - deploy

before_script:
  - apt-get update -qq && apt-get install -y -qq git python3.5 python3-pip
  - mkdir -p ~/.ssh
  - echo "$CI_PUSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - ssh-keyscan -H 'gitlab.com' >> ~/.ssh/known_hosts
  - git config --global user.email max.ehr@gmail.com
  - git config --global user.name Queuecumber
  - git remote -v

cache:
    key: "$CI_PIPELINE_ID"
    paths:
      - kern_job_id

kernel:
  stage: build
  script:
    - apt-get install -y -qq build-essential kernel-package fakeroot libncurses5-dev libssl-dev ccache python3.5
    - git config --global user.email "max.ehr@gmail.com"
    - git config --global user.name "Max Ehrlich"
    - python3.5 setup-patches.py "$KERN_MSG_TITLE"
    - cp .config linux
    - cd linux
    - make olddefconfig
    - make clean
    - make -j `getconf _NPROCESSORS_ONLN` deb-pkg LOCALVERSION=-acso
    - dpkg-genchanges -S -UDistribution > ../*.changes
    - cd ..
    - echo $CI_JOB_ID >> kern_job_id
  only:
    - triggers
  artifacts:
    paths: 
      - ./*.deb
      - ./*.tar.gz
      - ./*.changes
      - ./*.dsc

ppa:
  stage: deploy
  script:
    - apt-get install -y devscripts gpg
    - echo "$CI_SIGN_KEY" | gpg --import --batch --no-tty --yes
    - debsign -k $DEBSIGN_KEYID *.changes
    - dput ppa:queuecumber/acso *.changes
  only:
    - triggers
  allow_failure: true

pages:
  stage: deploy
  script:
    - export KERN_JOB_ID=$(cat kern_job_id)
    - "echo Job ID: $KERN_JOB_ID"
    - git checkout pages
    - python3.5 splice_pages.py "$KERN_MSG_TITLE" "$KERN_JOB_ID"
    - mkdir public
    - cp index.html public/index.html
    - cp kernels.json public/kernels.json
    - git add kernels.json
    - "git commit -m \"[CI: $CI_PIPELINE_ID] Add $KERN_MSG_TITLE\""
    - git remote set-url origin git@gitlab.com:Queuecumber/linux-acs-override.git
    - git push
  only:
    - triggers
  artifacts:
    paths:
    - public
